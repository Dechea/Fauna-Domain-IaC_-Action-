name: 'Fauna Domain - Infrastructure as code'
description: 'Greet someone'
inputs:
  GITHUB_PAT:
    description: 'The key used to access your github repos.'
    required: true
  FAUNA_SECRET:
    description: 'The key used to access your Fauna database.'
    required: true
  BRANCH:
    description: 'The branch that will be fetched from the other repos and deployed to the database. Eg. "develop", "release", "master", ...'
    required: true
    default: 'master'
  GITHUB_DOMAIN:
    description: 'The domain/company of your github repository. Eg. Dechea'
    required: true
  DATABASE:
    description: 'The target database where you want to apply the migration.'
    required: true
    default: 'Prod'
  DOMAINS:
    description: 'JSON Array with the repository names of the domains.'
    required: true
  FAUNA_DOMAIN:
    description: 'The domain where your database are hosted. Eg. db.fauna.com, db.eu.fauna.com etc.'
    required: true
    default: 'db.eu.fauna.com'
  VERBOSE:
    description: 'Turn on extra debug information.'
    required: false
    default: 'false'
#outputs:
runs:
  using: "composite"
  steps:
    - run: |
        echo "Input parameters: ${{ inputs.GITHUB_PAT }}"
        echo "Input array: ${{ inputs.DOMAINS }}"
        echo "Input branch: ${{ inputs.BRANCH }}"
      shell: bash

    - name: "Convert string to array for domain names"
      id: convert_domains
      run: |
        chmod u+x ${{ github.action_path }}/scripts/convert_input_string.sh
        DOMAINS_MODIFIED=$( ${{ github.action_path }}/scripts/convert_input_string.sh ${{ inputs.DOMAINS }} ${{ inputs.BRANCH }} ${{ inputs.GITHUB_DOMAIN }})
        echo "Domain Modified: $DOMAINS_MODIFIED"
        echo "::set-output name=domains_modified::$DOMAINS_MODIFIED"
      shell: bash

    - run: |
        echo "Domain Names: ${{steps.convert_domains.outputs.domains_modified}}"
      shell: bash

    - uses: actions/checkout@v3
    - name: Checkout all domain repos
      uses: vweevers/multi-checkout-action@v1
      with:
        token: ${{ inputs.GITHUB_PAT }}
        repositories: |
          ${{steps.convert_domains.outputs.domains_modified}}
        path: repos

    - name: Merge schema files
      run: |
        cd repos/${{ inputs.GITHUB_DOMAIN }}
        ls -lA
        mkdir -p schema
        IFS="," read -a repoNames <<< ${{ inputs.DOMAINS }}
        for index in "${!repoNames[@]}"
        do
          echo "repo: ${repoNames[index]}"
          cat ${repoNames[index]}/${repoNames[index],,}.gql >> schema/schema.gql
        done
        echo "Successfully merge schema files"
#        cat schema/schema.gql
      shell: bash
#
#    - name: Upload Schema File
#      run: |
#        curl -X POST "https://graphql.eu.fauna.com/import?mode=merge" -H "authorization:Bearer ${{ inputs.FAUNA_SECRET }}" --data-binary "@repos/schema/schema.gql"
#      shell: bash

    - name: Merge all test files
      run: |
        mkdir faunaTests faunaTests/fauna
        ls -lA
        IFS="," read -a repoNames <<< ${{ inputs.DOMAINS }}
        for index in "${!repoNames[@]}"
        do
          rsync -avuP repos/${{ inputs.GITHUB_DOMAIN }}/${repoNames[index]}/__mocks__/ faunaTests/__mocks__/
          rsync -avuP repos/${{ inputs.GITHUB_DOMAIN }}/${repoNames[index]}/constants/ faunaTests/constants/
          rsync -avuP repos/${{ inputs.GITHUB_DOMAIN }}/${repoNames[index]}/fauna/src/ faunaTests/fauna/src/
          rsync -avuP repos/${{ inputs.GITHUB_DOMAIN }}/${repoNames[index]}/fauna/resources/ faunaTests/fauna/resources/
          rsync -avuP repos/${{ inputs.GITHUB_DOMAIN }}/${repoNames[index]}/fauna/tests/ faunaTests/fauna/tests/
          [ -d "repos/${{ inputs.GITHUB_DOMAIN }}/${repoNames[index]}/fauna/util/" ] && rsync -avuP repos/${{ inputs.GITHUB_DOMAIN }}/${repoNames[index]}/fauna/util/ faunaTests/fauna/util/
          rsync -avuP util/ faunaTests/util/
        done
        echo "Successfully copied necessary files for testing"
      shell: bash

    - name: Setup Node.js
      id: cache-node-modules
      uses: actions/setup-node@v2
      with:
        node-version: '14'
        cache: 'npm'

#    - name: Install Node.js and test
#      run: |
#        npm install
#        npm run test
#      shell: bash
#
#    - name: Upload coverage files
#      uses: actions/upload-artifact@v3
#      with:
#        name: coverage-files
#        path: coverage/**

    - name: Create Fauna migration files
      run: |
        mkdir faunaTests faunaTests/fauna
        ls -lA
        IFS="," read -a repoNames <<< ${{ inputs.DOMAINS }}
        for index in "${!repoNames[@]}"
        do
          cp -r repos/${{ inputs.GITHUB_DOMAIN }}/${repoNames[index]}/fauna/* fauna
        done
        npm install
        echo "FAUNA_ADMIN_KEY=${{ inputs.FAUNA_DOMAIN }}" >> $GITHUB_ENV
        echo "FAUNADB_DOMAIN=${{ inputs.FAUNA_SECRET }}" >> $GITHUB_ENV
        echo ${{ env.FAUNA_DOMAIN }}
        echo ${{ env.FAUNA_SECRET }}
#        npm run fauna:generate
        echo "Successfully created fauna migration"
      shell: bash

        cp -r repos/$repo/fauna/* fauna


